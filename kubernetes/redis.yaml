apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: core
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
    name: redis
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-claim
  namespace: core
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-volumes
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: core
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  volumes:
  - name: redis-claim
    persistentVolumeClaim:
      claimName: redis-claim
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redislabs/rejson:latest
        command: ["redis-server", "--loadmodule", "/usr/lib/redis/modules/rejson.so", "--loadmodule", "/usr/lib/redis/modules/redisearch.so", "--requirepass"]
        args: ["$(REDIS_PASSWORD)"]
        volumeMounts:
          - name: redis-claim
            mountPath: /data
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        resources:
          requests:
            memory: 8Gi
            cpu: 1
          limits:
            memory: 12Gi
            cpu: 2
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 2
          successThreshold: 1
          failureThreshold: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3