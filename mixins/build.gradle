buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

plugins {
    id "idea"
    id "java"
    id "maven-publish"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.github.rancraftplayz.remapper" version "1.0.2"
}

apply plugin: "com.jfrog.artifactory"

group 'net.chrotos.chrotoscloud'
version '3.0-SNAPSHOT'

artifactory {
    contextUrl = "${chrotos_contextUrl}"
    publish {
        contextUrl = "${chrotos_contextUrl}"
        repository {
            repoKey = 'public'
            username = "${chrotos_user}"
            password = "${chrotos_password}"
        }
        defaults {
            publications('mavenJava')
        }
    }
}

configurations {
    shade
    implementation.extendsFrom remapLib
    implementation.extendsFrom shade
    accessWidenerLib.extendsFrom implementation
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.elmakers.com/repository/'
    }
    maven {
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
    maven {
        url 'https://artifactory.chrotos.net/artifactory/public'
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly "org.spigotmc:spigot:1.18.2-R0.1-SNAPSHOT"
    compileOnly "org.spigotmc:spigot:1.18.2-R0.1-SNAPSHOT:remapped-mojang"

    implementation 'space.vectrix.ignite:ignite-api:0.8.0'
    implementation 'org.spongepowered:mixin:0.8.5'

    implementation 'net.chrotos.chrotoscloud:api:3.0-SNAPSHOT'

    remapLib "org.spigotmc:spigot:1.18.2-R0.1-SNAPSHOT:remapped-mojang"

    accessWidener fileTree(dir: 'src/main/resources', include: ['*.accesswidener'])
    implementation "space.vectrix.ignite:ignite-api:0.8.0"
    implementation "org.spongepowered:mixin:0.8.5"
}

spigot {
    version = "1.18.2"
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations = [project.configurations.getByName("shade")]
    classifier = null
    exclude(
            "**/LICENSE.md",
            "**/LICENSE.txt",
            "**/LICENSE",
            "**/NOTICE",
            "**/NOTICE.txt",
            "pack.mcmeta",
            "dummyThing",
            "**/module-info.class",
            "META-INF/proguard/**",
            "META-INF/maven/**",
            "META-INF/versions/**",
            "META-INF/com.android.tools/**",
            "fabric.mod.json"
    )
    mergeServiceFiles()
}

processResources {
    inputs.property "version", project.version

    filesMatching("ignite.mod.json") {
        expand "version": "1.0-SNAPSHOT"
    }
}

jar.finalizedBy(shadowJar)
shadowJar.finalizedBy(remapJar)

publishing {
    publications {
        mavenJava(MavenPublication) { publication ->
            artifactId = 'mixins'
            from shadow.component(publication)
        }
    }
}